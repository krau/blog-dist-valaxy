<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>柯罗krau的博客 | krau's blog</title>
        <link>https://krau.top/</link>
        <description>能写一辈子博客吗?</description>
        <lastBuildDate>Wed, 21 Aug 2024 12:25:51 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <image>
            <title>柯罗krau的博客 | krau's blog</title>
            <url>https://krau.top/photo/avatar/avatar.jpg</url>
            <link>https://krau.top/</link>
        </image>
        <copyright>CC BY-NC-SA 4.0 2024 © Krau</copyright>
        <atom:link href="https://krau.top/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[ray-mmd渲染基本流程]]></title>
            <link>https://krau.top/posts/mmdray-basic-rendering</link>
            <guid>https://krau.top/posts/mmdray-basic-rendering</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="https://pic.downk.cc/item/5f119a0214195aa59417256d.png" alt="preview"></p>
<br/><p>访问 <a href="https://krau.top/posts/mmdray-basic-rendering" target="_blank">https://krau.top/posts/mmdray-basic-rendering</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[ray-mmd制作法线贴图]]></title>
            <link>https://krau.top/posts/mmdray-normal-map</link>
            <guid>https://krau.top/posts/mmdray-normal-map</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>如何使材质贴图更有层次感？</p>
<p>这就需要制作相应的<a href="https://zh.wikipedia.org/wiki/%E6%B3%95%E7%BA%BF%E8%B4%B4%E5%9B%BE">法线贴图</a></p>
<p>本文以YYB式初音未来为例，制作相应的法线贴图，使用ray渲染的版本为1.5.2</p>
<br/><p>访问 <a href="https://krau.top/posts/mmdray-normal-map" target="_blank">https://krau.top/posts/mmdray-normal-map</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[MMD中导出带alpha通道视频的方法]]></title>
            <link>https://krau.top/posts/mmdray-output-videos-with-alpha</link>
            <guid>https://krau.top/posts/mmdray-output-videos-with-alpha</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<h2>前言</h2>
<p>闲来无事在摸MMD，然后看到了这个</p>
<p>[【PV背景配布/动作配布】九尾三妈式初音 - お気に召すまま<br>
](<a href="https://www.bilibili.com/video/BV1r74">https://www.bilibili.com/video/BV1r74</a></p>
<br/><p>访问 <a href="https://krau.top/posts/mmdray-output-videos-with-alpha" target="_blank">https://krau.top/posts/mmdray-output-videos-with-alpha</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[ray-mmd内置天空盒调整参数简介]]></title>
            <link>https://krau.top/posts/mmdray-skyboxs</link>
            <guid>https://krau.top/posts/mmdray-skyboxs</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>完成ray渲染的基本流程后，就要开始调各种参数了，本篇介绍ray渲染内置的几个天空盒的参数<br>
![内置天空盒](<a href="https://cdn.jsdelivr.net/gh/voidoath/photo/b">https://cdn.jsdelivr.net/gh/voidoath/photo/b</a></p>
<br/><p>访问 <a href="https://krau.top/posts/mmdray-skyboxs" target="_blank">https://krau.top/posts/mmdray-skyboxs</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[将旧手机通过Linuxdeploy改造为linux服务器搭建cloudreve个人网盘实现离线下载]]></title>
            <link>https://krau.top/posts/old-phone-become-server</link>
            <guid>https://krau.top/posts/old-phone-become-server</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>最近因疫情闲在家，就折腾起了自己的旧手机</p>
<br/><p>访问 <a href="https://krau.top/posts/old-phone-become-server" target="_blank">https://krau.top/posts/old-phone-become-server</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[2020年终总结]]></title>
            <link>https://krau.top/posts/summary-2020</link>
            <guid>https://krau.top/posts/summary-2020</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>一年年来去匆匆，往事皆是云烟过眼，不做总结似乎像是虚度了一年时间。但想要写下的东西又太多，总结就不知不觉写成了流水账。</p>
<br/><p>访问 <a href="https://krau.top/posts/summary-2020" target="_blank">https://krau.top/posts/summary-2020</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[使用ShareX和Markdown Image自动压缩截图为WebP格式并一键插入Markdown文档]]></title>
            <link>https://krau.top/posts/use-sharex-and-mdimage-for-efficiency/index</link>
            <guid>https://krau.top/posts/use-sharex-and-mdimage-for-efficiency/index</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>之前我曾安利过 <a href="http://localhost:4859/posts/pasteimage-in-vs">PasteImage</a> 这个插件，用 VSCode 写博客/文档的时候，用它可以很快捷地在md文档中插入图片。</p>
<p>受某个友人影响，我也开始尝试 <s>拥抱 webp</s>了，近期的文章内的图片都已经压缩成了 webp 格式。但是 PasteImage 却不支持 webp 格式，于是我又想办法整出了今天这个解决方案，实现完全自动化的 压缩+插入图片。</p>
<br/><p>访问 <a href="https://krau.top/posts/use-sharex-and-mdimage-for-efficiency/index" target="_blank">https://krau.top/posts/use-sharex-and-mdimage-for-efficiency/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[将 hexo 博客迁移至 valaxy]]></title>
            <link>https://krau.top/posts/hexo-migrate-to-valaxy/index</link>
            <guid>https://krau.top/posts/hexo-migrate-to-valaxy/index</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>::: warning 注意<br>
本文章作于 valaxy 版本 0.12.2 , 部分内容可能已经过时 , 请结合<a href="https://valaxy.site/guide/getting-started">官方文档</a>一起阅读<br>
:::</p>
<h2>前言</h2>
<p>在 2022 年 8 月份，我向<a href="https://github.com/YunYouJun">云游君</a>的 hexo 主题 <a href="https://github.com/YunYouJun/hexo-theme-yun">hexo-theme-yun</a> 提 issue 的时候，他向我提到了 <a href="https://valaxy.site/">valaxy</a> 这个由他开发的静态博客框架。当时 valaxy 十分先进的技术栈和一些优良特性一下就吸引了我，但是由于我已经使用 hexo 写了很多文章，且 valaxy 也没有迁移文档/工具，所以那时我并没有迁移。</p>
<p>时隔半年，我再去看 valaxy 的时候，它已经基本可用了，文档虽然还是不完整，但是够用。于是我决定将我的 hexo 博客迁移至 valaxy。<s>hexo 这贼船越早下越好</s></p>
<br/><p>访问 <a href="https://krau.top/posts/hexo-migrate-to-valaxy/index" target="_blank">https://krau.top/posts/hexo-migrate-to-valaxy/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[为 valaxy 博客 yun 主题添加 artitalk 说说页面]]></title>
            <link>https://krau.top/posts/add-artitalk-for-valaxy-yun</link>
            <guid>https://krau.top/posts/add-artitalk-for-valaxy-yun</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<h2>Artitalk</h2>
<p><a href="https://artitalk.js.org/">Artitalk</a> 是一个基于 Leancloud 的简单说说 js，具体参见官方文档。</p>
<p>我成功将它接入了我的博客，</p>
<br/><p>访问 <a href="https://krau.top/posts/add-artitalk-for-valaxy-yun" target="_blank">https://krau.top/posts/add-artitalk-for-valaxy-yun</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[简单汇总下那些推过的galgame（持续更新）]]></title>
            <link>https://krau.top/posts/gal-collection</link>
            <guid>https://krau.top/posts/gal-collection</guid>
            <pubDate>Wed, 21 Aug 2024 12:24:04 GMT</pubDate>
            <content:encoded><![CDATA[<br/><p>访问 <a href="https://krau.top/posts/gal-collection" target="_blank">https://krau.top/posts/gal-collection</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[部署跨多数据中心分布的 MongoDB 副本集]]></title>
            <link>https://krau.top/posts/deploy-mongodb-replica-set/index</link>
            <guid>https://krau.top/posts/deploy-mongodb-replica-set/index</guid>
            <pubDate>Sun, 18 Aug 2024 19:05:10 GMT</pubDate>
            <content:encoded><![CDATA[<p><img src="https://krau.top/photo/posts/deploy-mongodb-replica-set/mongodbreplicaset.webp" alt="MongoDB"></p>
<p>最近把自己的一个小项目迁移了服务器, 结果发现接口响应速度慢了很多, 排查了不少时间后突然想起来是因为新服务器和 MongoDB Atlas 不在同一个地区, 光是二者之间的网络延迟就很高.</p>
<p>而 MongoDB Atlas 提供的免费实例要备份数据和迁移比较麻烦, 又因为 MongoDB 单实例不支持事务, 所以决定干脆自建一个 MongoDB 副本集 😎.</p>
<br/><p>访问 <a href="https://krau.top/posts/deploy-mongodb-replica-set/index" target="_blank">https://krau.top/posts/deploy-mongodb-replica-set/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[在 WSL2 上安装 CUDA]]></title>
            <link>https://krau.top/posts/install-cuda-on-wsl/index</link>
            <guid>https://krau.top/posts/install-cuda-on-wsl/index</guid>
            <pubDate>Mon, 01 Jul 2024 19:32:40 GMT</pubDate>
            <content:encoded><![CDATA[<p>最近在写一些小东西的时候需要用到显卡, 但是 Windows 的开发体验又很差 (尤其是对于 Python), 所以就在 WSL 上安装了 CUDA 以供使用.</p>
<br/><p>访问 <a href="https://krau.top/posts/install-cuda-on-wsl/index" target="_blank">https://krau.top/posts/install-cuda-on-wsl/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[使用Python写一个Telegram bot吧|Telegram bot教程]]></title>
            <link>https://krau.top/posts/tg-bot-dev-note-kmua</link>
            <guid>https://krau.top/posts/tg-bot-dev-note-kmua</guid>
            <pubDate>Sun, 14 Jan 2024 09:13:19 GMT</pubDate>
            <content:encoded><![CDATA[<p>::: tip<br>
2024-01-14 更新:</p>
<p>修复了一些错误, 删除了一些不必要的内容</p>
<p>评论区有人建议建一个群组讨论: <a href="https://t.me/kmuachat">@kmuachat</a></p>
<p>本文只是我最初写 bot 时的一点笔记, 更建议你直接看 <a href="https://docs.python-telegram-bot.org">Python-Telegram-Bot</a> 的文档<br>
:::</p>
<h2>前言</h2>
<p><s>为了激发群友们水群的积极性，</s> 为了学习和应用 python 知识，我最近在开发一个 telegram 的 bot，所以写这篇文章以记录和分享</p>
<p>在这篇文章中，将使用 <a href="https://docs.python-telegram-bot.org">Python-Telegram-Bot</a> ，基于 Python 的异步特性与 Telegram 友好开放的 API，开发一个兼顾实用性和趣味的 bot ，并使用 Docker 在任何地方部署 bot</p>
<p>Demo: <a href="https://github.com/krau/kmua-bot">kmua-bot</a></p>
<p>本文不是从零开始的教程，阅读本文前，你需要具有一点点(真的很少一点)的 python 或其他语言编程的基础。</p>
<br/><p>访问 <a href="https://krau.top/posts/tg-bot-dev-note-kmua" target="_blank">https://krau.top/posts/tg-bot-dev-note-kmua</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[使用官方脚本一键安装docker|安装docker-compose]]></title>
            <link>https://krau.top/posts/install-docker-one-key</link>
            <guid>https://krau.top/posts/install-docker-one-key</guid>
            <pubDate>Sun, 12 Nov 2023 09:29:38 GMT</pubDate>
            <content:encoded><![CDATA[<h2>安装docker</h2>
<p>docker官方提供了傻瓜式安装脚本，为你做好所有工作，免去了手动安装的繁琐。</p>
<p>本文实测系统环境：debian11</p>
<p>执行以下命令</p>
<p>::: tip 2023-03-07</p>
<p>不知道从什么时候开始官方脚本已经默认也安装了 <code>docker compose</code>, 不需要后面的手动安装了, 因此已删除多余的内容</p>
<p>也就是说, 只需要执行下面的一键脚本</p>
<p>注意是 <code>docker compose</code> 而不是 <code>docker-compose</code>. 执行命令时候也没有这个杠</p>
<p>:::</p>
<pre><code class="language-shell">curl -fsSL https://get.docker.com | bash -s docker
</code></pre>
<p>可在此命令后附带<code>--mirror</code>参数设置镜像源，以提高国内服务器下载docker的速度</p>
<p>如使用阿里云镜像:</p>
<pre><code class="language-shell">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun
</code></pre>
<br/><p>访问 <a href="https://krau.top/posts/install-docker-one-key" target="_blank">https://krau.top/posts/install-docker-one-key</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[Go 的 gRPC 和 Protocol Buffers---TLS 认证]]></title>
            <link>https://krau.top/posts/grpc-and-protobuf-in-go-tls</link>
            <guid>https://krau.top/posts/grpc-and-protobuf-in-go-tls</guid>
            <pubDate>Mon, 23 Oct 2023 09:29:29 GMT</pubDate>
            <content:encoded><![CDATA[<h2>前言</h2>
<p>为了保证 gRPC 服务不被第三方监听和调用, 防止通信被篡改或伪造, 需要对 gRPC 服务添加身份验证机制.</p>
<p>目前 gRPC 内置了三种身份验证机制:</p>
<ul>
<li><strong>SSL/TLS</strong>: gRPC 集成了 SSL/TLS, 提倡使用 SSL/TLS 对服务器进行身份验证, 并对客户端与服务器之间交换的所有数据进行加密。同时可选让客户端提供用于相互验证的证书.</li>
<li><strong>基于 Token 的身份验证</strong>: gRPC 提供了一种可将基于元数据的凭证附加到请求和响应中的机制. 这种机制必须与 SSL/TLS 同时使用, 以提供完整的身份验证和加密通信.</li>
<li><strong>ATLS</strong>: Google 自家的双向身份验证和传输安全系统, 通常也用于在 Google 家的平台上构建服务时.</li>
</ul>
<p>本文介绍 gRPC 中的 SSL/TLS.</p>
<br/><p>访问 <a href="https://krau.top/posts/grpc-and-protobuf-in-go-tls" target="_blank">https://krau.top/posts/grpc-and-protobuf-in-go-tls</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[Go 的 gRPC 和 Protocol Buffers---Quick Start]]></title>
            <link>https://krau.top/posts/grpc-and-protobuf-in-go-start</link>
            <guid>https://krau.top/posts/grpc-and-protobuf-in-go-start</guid>
            <pubDate>Sat, 21 Oct 2023 21:27:48 GMT</pubDate>
            <content:encoded><![CDATA[<h2>Protocol Buffers</h2>
<p>Protocol Buffers (Protobuf) 是一种语言无关、平台无关、可扩展的序列化结构化数据的方法, 可以像 XML, json 等一样用于程序间数据通信. 而相较于上列二者, Protobuf 有更高的效率.</p>
<p>使用 Protobuf 需要在 <code>.proto</code> 文件中定义数据结构, 并安装其编译器来生成对应语言的模型. 本文以 Go 为例.</p>
<br/><p>访问 <a href="https://krau.top/posts/grpc-and-protobuf-in-go-start" target="_blank">https://krau.top/posts/grpc-and-protobuf-in-go-start</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[蝴蝶]]></title>
            <link>https://krau.top/posts/dairy-butterfly</link>
            <guid>https://krau.top/posts/dairy-butterfly</guid>
            <pubDate>Fri, 11 Aug 2023 00:30:37 GMT</pubDate>
            <content:encoded><![CDATA[<p>晚自习，教室里飞来一只蝴蝶。</p>
<br/><p>访问 <a href="https://krau.top/posts/dairy-butterfly" target="_blank">https://krau.top/posts/dairy-butterfly</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[往事 · 小狗]]></title>
            <link>https://krau.top/posts/memory-dog</link>
            <guid>https://krau.top/posts/memory-dog</guid>
            <pubDate>Fri, 11 Aug 2023 00:17:55 GMT</pubDate>
            <content:encoded><![CDATA[<p>忘了具体是在小学几年级的时候，家里抓回来了两三只小狗。也忘了是从哪里抓回来的，是怎么抓回来的，只依稀记得它们似乎没有妈妈。</p>
<p>它们不到一个月大，身上都是白色的毛，就像当时冬季的雪，惹人可爱又可怜。爸</p>
<br/><p>访问 <a href="https://krau.top/posts/memory-dog" target="_blank">https://krau.top/posts/memory-dog</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[使用conda安装和管理python多版本环境]]></title>
            <link>https://krau.top/posts/manage-python-version-by-conda</link>
            <guid>https://krau.top/posts/manage-python-version-by-conda</guid>
            <pubDate>Fri, 14 Apr 2023 14:09:59 GMT</pubDate>
            <content:encoded><![CDATA[<p><s>感觉不如编译安装</s></p>
<br/><p>访问 <a href="https://krau.top/posts/manage-python-version-by-conda" target="_blank">https://krau.top/posts/manage-python-version-by-conda</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[Debian/Linux安装最新Python版本及多版本环境管理]]></title>
            <link>https://krau.top/posts/install-manage-python-version-on-linux/index</link>
            <guid>https://krau.top/posts/install-manage-python-version-on-linux/index</guid>
            <pubDate>Thu, 13 Apr 2023 15:27:27 GMT</pubDate>
            <content:encoded><![CDATA[<p>Python 的环境管理确实烦,而且会出现版本之间不兼容的情况,所以有必要知道如何安装不同版本的 Python 并管理其环境.</p>
<p>本文系统环境为 Debian11, 虚拟环境工具使用的是 venv, 采用编译安装的方法. Python 版本为 3.11.6</p>
<br/><p>访问 <a href="https://krau.top/posts/install-manage-python-version-on-linux/index" target="_blank">https://krau.top/posts/install-manage-python-version-on-linux/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[JWT 认证及其在 FastAPI 中的使用]]></title>
            <link>https://krau.top/posts/fastapi-jwt/index</link>
            <guid>https://krau.top/posts/fastapi-jwt/index</guid>
            <pubDate>Wed, 22 Mar 2023 10:59:53 GMT</pubDate>
            <content:encoded><![CDATA[<h2>什么是 JWT</h2>
<p>JWT: JSON Web Tokens,它是一种将 JSON 对象编码为没有空格，且难以理解的长字符串的标准。在具体上,它就是一段字符串,下面就是 FastAPI 文档中给出的例子</p>
<pre><code class="language-txt">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
</code></pre>
<p>抽象地把它看成是这样的</p>
<pre><code class="language-txt">aaaaaaaaaaaa.bbbbbbbbbbbb.cccccccccccc
</code></pre>
<br/><p>访问 <a href="https://krau.top/posts/fastapi-jwt/index" target="_blank">https://krau.top/posts/fastapi-jwt/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[FastAPI dependency injection system]]></title>
            <link>https://krau.top/posts/fastapi-dependency-injection</link>
            <guid>https://krau.top/posts/fastapi-dependency-injection</guid>
            <pubDate>Wed, 15 Mar 2023 13:30:34 GMT</pubDate>
            <content:encoded><![CDATA[<br/><p>访问 <a href="https://krau.top/posts/fastapi-dependency-injection" target="_blank">https://krau.top/posts/fastapi-dependency-injection</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[ArchLinux on Y9000P2022十分好用,就是有点难用]]></title>
            <link>https://krau.top/posts/archlinux-on-y9kp22-1</link>
            <guid>https://krau.top/posts/archlinux-on-y9kp22-1</guid>
            <pubDate>Mon, 20 Feb 2023 21:51:21 GMT</pubDate>
            <content:encoded><![CDATA[<p>受不了啦，给笔记本装上 Arch 折磨自己！</p>
<br/><p>访问 <a href="https://krau.top/posts/archlinux-on-y9kp22-1" target="_blank">https://krau.top/posts/archlinux-on-y9kp22-1</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[ChatGPT简单使用体验|你的下一个Google，何必是搜索引擎]]></title>
            <link>https://krau.top/posts/ChatGPT-simple-exp/index</link>
            <guid>https://krau.top/posts/ChatGPT-simple-exp/index</guid>
            <pubDate>Mon, 05 Dec 2022 20:47:50 GMT</pubDate>
            <content:encoded><![CDATA[<p>最近 openai 的 <a href="https://chat.openai.com/chat">ChatGPT</a> 有点小火，看了官方和民间的一些截图之后，感觉这东西确实有点意思，所以就想办法注册了个号来体验体验。</p>
<br/><p>访问 <a href="https://krau.top/posts/ChatGPT-simple-exp/index" target="_blank">https://krau.top/posts/ChatGPT-simple-exp/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[Python——列表、元组、字典、条件、循环、输入、函数]]></title>
            <link>https://krau.top/posts/py3-quick-basic</link>
            <guid>https://krau.top/posts/py3-quick-basic</guid>
            <pubDate>Sun, 30 Oct 2022 18:29:00 GMT</pubDate>
            <content:encoded><![CDATA[<h2>列表</h2>
<h3>列表基础</h3>
<pre><code class="language-py">#创建列表
friends = ['ah','leao','zhang','wang']
print(friends)

#访问列表元素
print(f</code></pre>
<br/><p>访问 <a href="https://krau.top/posts/py3-quick-basic" target="_blank">https://krau.top/posts/py3-quick-basic</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[【如何加入一个zerotier网络]]></title>
            <link>https://krau.top/posts/zerotier-client/index</link>
            <guid>https://krau.top/posts/zerotier-client/index</guid>
            <pubDate>Sun, 21 Aug 2022 09:45:30 GMT</pubDate>
            <content:encoded><![CDATA[<p>最近把自家宽带从联通转战移动，然而移动不给公网ipv4，导致我mc服的铸币玩家们无法连接服务器，于是决定用zerotier 组建网络，一举多得.</p>
<p>此文只介绍如何加入一个zerotier网络。</p>
<br/><p>访问 <a href="https://krau.top/posts/zerotier-client/index" target="_blank">https://krau.top/posts/zerotier-client/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[在vscode里直接粘贴图片——pasteimage]]></title>
            <link>https://krau.top/posts/pasteimage-in-vs/index</link>
            <guid>https://krau.top/posts/pasteimage-in-vs/index</guid>
            <pubDate>Thu, 07 Jul 2022 09:16:30 GMT</pubDate>
            <content:encoded><![CDATA[<h2>前言</h2>
<p>使用vscode写博客，要想便捷快速地在文章中插入图片，比较常见的一个做法是通过picgo+图床实现快捷键上传图片，并生成markdown格式的链接。图床常常是利用jsdelivr加速github仓库的方式搭建。</p>
<p>我原本也一直是这样做的，但自从jsdelivr在国内不可用之后，（再者，jsdelivr的使用规范也不允许作为图床使用）我换用了另一种方案，即通过vs的pasteimage插件直接把图片粘贴在文章内，并保存在博客目录内。</p>
<br/><p>访问 <a href="https://krau.top/posts/pasteimage-in-vs/index" target="_blank">https://krau.top/posts/pasteimage-in-vs/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[自己动手制作网线水晶头]]></title>
            <link>https://krau.top/posts/make-cable/index</link>
            <guid>https://krau.top/posts/make-cable/index</guid>
            <pubDate>Mon, 20 Jun 2022 22:26:35 GMT</pubDate>
            <content:encoded><![CDATA[<p>我最近买了一台二手主机当nas用, 但是由于我家的布局设置, 必须要把这台主机放置在离路由器较远的一个位置。所以我直接买了根超长网线 (指30m) 以防长度不够, 但是到手之后发现, 我严重高估了我所需的长度, 于是把这根长网线剪去一大段, 并去学会了接网线水晶头的操作。</p>
<br/><p>访问 <a href="https://krau.top/posts/make-cable/index" target="_blank">https://krau.top/posts/make-cable/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[Minecraft开服入门]]></title>
            <link>https://krau.top/posts/mc-host-server/index</link>
            <guid>https://krau.top/posts/mc-host-server/index</guid>
            <pubDate>Mon, 20 Jun 2022 10:00:38 GMT</pubDate>
            <content:encoded><![CDATA[<p>想和基友们联机玩mc，相比于使用各种联机平台，或搭建虚拟局域网，不如自己直接开个服务器。既不用保持至少一人在线，又能避免玩游戏时需要额外运行一个联机程序的臃肿。</p>
<p>本文记录博主自己的mc开服经历。</p>
<br/><p>访问 <a href="https://krau.top/posts/mc-host-server/index" target="_blank">https://krau.top/posts/mc-host-server/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
        <item>
            <title><![CDATA[使用ACME脚本申请并配置 SSL 证书]]></title>
            <link>https://krau.top/posts/acmessl/index</link>
            <guid>https://krau.top/posts/acmessl/index</guid>
            <pubDate>Fri, 22 Apr 2022 16:48:01 GMT</pubDate>
            <content:encoded><![CDATA[<h2>为什么选择ACME</h2>
<p>要想通过 TLS 访问自己域名下的服务, 就必须申请证书。类似宝塔这种面板提供了简单快捷的方法一键申请, 但终究不是良好的解决方案。一来宝塔过于臃肿, 二来其需要手机实名验证。使用各大云服务商提供的【免费证书】则还需要登录网页、申请、导入证书, 未免操作繁琐。更何况这些云服务商提供的证书只能给你很少的自由选择性。</p>
<p>而ACME则很好地解决了这些问题。</p>
<br/><p>访问 <a href="https://krau.top/posts/acmessl/index" target="_blank">https://krau.top/posts/acmessl/index</a> 阅读全文。</p>]]></content:encoded>
            <author>i@valaxy.site (Krau)</author>
        </item>
    </channel>
</rss>